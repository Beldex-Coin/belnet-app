plugins {
    id "com.android.library"
    id "kotlin-android"
    //id "com.diffplug.spotless" // Removed version here to prevent conflict
}

group = "io.beldex.belnet_lib"
version = "1.0-SNAPSHOT"



rootProject.allprojects {
	repositories {
		google()
	    mavenCentral()
	}
}



android {
	compileSdkVersion 35
    namespace 'io.beldex.belnet_lib'
	ndkVersion '28.1.13356709'
	sourceSets {
		main.java.srcDirs += "src/main/java"
		main.java.srcDirs += "src/main/kotlin"
		main.jniLibs.srcDirs += "src/main/jniLibs"
	}
	defaultConfig {
		minSdkVersion 23
	}
	lintOptions {
		disable "InvalidPackage"
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_17
		targetCompatibility JavaVersion.VERSION_17
	}

	 kotlinOptions {
        jvmTarget = "17"
    }
}

dependencies {
	//implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

task cleanNativeLibs(type: Delete) {
	delete "$projectDir/../external/belnet/build-android"
}

task compileNativeLibs(type: Exec) {
	def f = new File("$projectDir/../external/belnet/contrib/android.sh")
	if ( f.exists() ) {
		workingDir "$projectDir/../external/belnet"
		environment "NDK", project.android.ndkDirectory
		executable "./contrib/android.sh"
	} else {
		executable "true"
	}
}

task ensureNativeLibs(type: Copy) {
	from("$projectDir/../external/belnet/build-android") {
		include 'out/*/*.so'
		eachFile { fcd ->
			fcd.relativePath = new RelativePath(true, fcd.relativePath.segments.drop(1))
		}
	}
	into "$projectDir/src/main/jniLibs/"
}

ensureNativeLibs.dependsOn compileNativeLibs
preBuild.dependsOn ensureNativeLibs
clean.dependsOn cleanNativeLibs
